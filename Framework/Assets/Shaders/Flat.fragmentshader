#version 330 core

uniform mat4 ViewProjectionTransform;
uniform mat4 WorldTransform;
uniform vec3 LightLocation;
uniform vec3 LightColor;

// Ouput from fragment shader
out vec4 color;

in vec4 v_color;
in vec3 position;

void main()
{
	vec3 projectionNormal = cross(dFdy(position), dFdx(position));
	vec3 norm = normalize(projectionNormal);

	vec3 L = (mat3(ViewProjectionTransform) * LightLocation) - position;

	float LdotN = dot(normalize(L), norm);

	color = v_color + vec4(LdotN * LightColor * 10 / length(L), 1.0f);
}